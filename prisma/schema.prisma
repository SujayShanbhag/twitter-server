// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//b2t7KpjhhLk8RFS5
model User {
  id              String  @id @default(cuid())
  firstName       String
  lastName        String?
  email           String  @unique
  profileImageURL String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  tweets    Tweet[]
  followers Follows[] @relation("follower")
  following Follows[] @relation("following")
  comments Comments[]
  likes Likes[]
}

model Tweet {
  id       String  @id @default(cuid())
  content  String
  imageURL String?

  author   User   @relation(fields: [authorId], references: [id])
  authorId String

  comments Comments[]
  likes Likes[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Follows {
  follower   User   @relation("follower", fields: [followerId], references: [id])
  followerId String

  following   User   @relation("following", fields: [followingId], references: [id])
  followingId String

  @@id([followerId, followingId])
}

model Comments {
  id String @id @default(cuid())
  content String
  author User @relation(fields : [authorId], references: [id])
  tweet Tweet @relation(fields: [tweetId],references: [id])
  tweetId String
  authorId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Likes {
  author User @relation(fields : [authorId], references: [id])
  tweet Tweet @relation(fields: [tweetId],references: [id])
  tweetId String
  authorId String
  @@id([authorId, tweetId])
}
